{"ast":null,"code":"var _jsxFileName = \"E:\\\\GitHub\\\\timespeed\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker'; // import console from Console;\n\nfunction TabButton(props) {\n  return React.createElement(\"button\", {\n    onClick: props.onClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, props.buttonName);\n}\n\nclass Show extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: \"input\",\n      count: 0,\n      curSelectTab: 0\n    };\n  }\n\n  clickTabButton(i) {}\n\n  render() {\n    var names = [\"我的世界\", \"你好\", \"简体\"];\n    var tabButtons = [];\n\n    for (var i = 0; i < names.length; i++) {\n      console.log(\"tabButtons %d %d %s\", i, names.length, names[i]);\n      tabButtons.push(x => {\n        const sid = \"tableButton\" + i;\n        return React.createElement(TabButton, {\n          buttonName: names[i],\n          id: sid,\n          onClick: () => this.clickTabButton(i),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36\n          },\n          __self: this\n        });\n      });\n    }\n\n    console.log(\"tabButtons %s\", tabButtons.toString());\n\n    if (this.state.count % 2 == 0) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, tabButtons);\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, \"12312312\"), React.createElement(\"button\", {\n        name: \"cool\",\n        onClick: () => {\n          var count = this.state.count + 1;\n          this.setState({\n            count: count\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \"cool\"), React.createElement(\"body\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, \"\\u54C7\\u54C8\\u54C8\\u54C8\"), React.createElement(\"body\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, \"icount is \", this.state.count));\n    }\n  }\n\n}\n\nReactDOM.render(React.createElement(Show, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 87\n  },\n  __self: this\n}), document.getElementById('root')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["E:\\GitHub\\timespeed\\src\\index.js"],"names":["React","ReactDOM","serviceWorker","TabButton","props","onClick","buttonName","Show","Component","constructor","state","name","count","curSelectTab","clickTabButton","i","render","names","tabButtons","length","console","log","push","x","sid","toString","setState","document","getElementById","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B,C,CACA;;AACA,SAASC,SAAT,CAAmBC,KAAnB,EAAyB;AACrB,SACI;AAAQ,IAAA,OAAO,EAAIA,KAAK,CAACC,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmCD,KAAK,CAACE,UAAzC,CADJ;AAGH;;AAED,MAAMC,IAAN,SAAmBP,KAAK,CAACQ,SAAzB,CAAmC;AAC/BC,EAAAA,WAAW,CAACL,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKM,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAC,OADI;AAETC,MAAAA,KAAK,EAAC,CAFG;AAGTC,MAAAA,YAAY,EAAC;AAHJ,KAAb;AAKH;;AAEDC,EAAAA,cAAc,CAACC,CAAD,EAAG,CAEhB;;AAEDC,EAAAA,MAAM,GAAG;AACL,QAAIC,KAAK,GAAG,CAAC,MAAD,EAAS,IAAT,EAAe,IAAf,CAAZ;AACA,QAAIC,UAAU,GAAG,EAAjB;;AACA,SAAK,IAAIH,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGE,KAAK,CAACE,MAA1B,EAAkCJ,CAAC,EAAnC,EACA;AACIK,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCN,CAAnC,EAAsCE,KAAK,CAACE,MAA5C,EAAoDF,KAAK,CAACF,CAAD,CAAzD;AACAG,MAAAA,UAAU,CAACI,IAAX,CACKC,CAAD,IAAO;AACH,cAAMC,GAAG,GAAG,gBAAgBT,CAA5B;AACA,eACI,oBAAC,SAAD;AAAW,UAAA,UAAU,EAAGE,KAAK,CAACF,CAAD,CAA7B;AAAmC,UAAA,EAAE,EAAES,GAAvC;AAA4C,UAAA,OAAO,EAAE,MAAM,KAAKV,cAAL,CAAoBC,CAApB,CAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAIH,OAPL;AASH;;AACDK,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BH,UAAU,CAACO,QAAX,EAA7B;;AAGA,QAAI,KAAKf,KAAL,CAAWE,KAAX,GAAkB,CAAlB,IAAuB,CAA3B,EAA6B;AACzB,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGCM,UAHD,CADJ;AAuBH,KAxBD,MAyBI;AACA,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADA,EAEA;AAAQ,QAAA,IAAI,EAAC,MAAb;AAAoB,QAAA,OAAO,EAAE,MAAM;AAC/B,cAAIN,KAAK,GAAG,KAAKF,KAAL,CAAWE,KAAX,GAAmB,CAA/B;AACA,eAAKc,QAAL,CAAc;AAACd,YAAAA,KAAK,EAACA;AAAP,WAAd;AACH,SAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFA,EAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCANA,EAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAiB,KAAKF,KAAL,CAAWE,KAA5B,CARA,CADJ;AAYH;AACJ;;AAxE8B;;AA2EnCX,QAAQ,CAACe,MAAT,CAAgB,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAAyBW,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAzB,E,CAEA;AACA;AACA;;AACA1B,aAAa,CAAC2B,UAAd","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n// import console from Console;\nfunction TabButton(props){\n    return(\n        <button onClick = {props.onClick}>{props.buttonName}</button>\n    );\n}\n\nclass Show extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            name:\"input\",\n            count:0,\n            curSelectTab:0\n        }\n    }\n    \n    clickTabButton(i){\n\n    }\n    \n    render() {\n        var names = [\"我的世界\", \"你好\", \"简体\"];\n        var tabButtons = []\n        for (var i = 0; i < names.length; i++)\n        {\n            console.log(\"tabButtons %d %d %s\", i, names.length, names[i]);\n            tabButtons.push(\n                (x) => {\n                    const sid = \"tableButton\" + i;\n                    return(\n                        <TabButton buttonName= {names[i]}  id={sid} onClick={() => this.clickTabButton(i)} />\n                    );\n                    \n                }\n            )\n        }\n        console.log(\"tabButtons %s\", tabButtons.toString());\n\n\n        if (this.state.count %2 == 0){\n            return (\n                <div>\n                {/* <TabButton buttonName = \"1\" onClick = {this.clickTabButton(i)}/> */}\n                {/* <header>12312312</header> */}\n                {tabButtons}\n                {/* <button name=\"cool\" onClick={() => {\n                    var count = this.state.count + 1\n                    this.setState({count:count})\n                }}>cool</button>\n                <body>\n                    hello js\n                </body>\n                <body>icount is {this.state.count}</body>\n                <input type=\"button\"></input>\n                <pre class=\"lua\">\n                <code>\n                    <text>function</text>()<br></br>\n                    return\n                    end\n                </code>\n                </pre> */}\n                </div>\n            );\n        }\n        else{\n            return (\n                <div>\n                <header>12312312</header>\n                <button name=\"cool\" onClick={() => {\n                    var count = this.state.count + 1\n                    this.setState({count:count})\n                }}>cool</button>\n                <body>哇哈哈哈\n                </body>\n                <body>icount is {this.state.count}</body>\n                </div>\n            );\n        }\n    }\n}\n\nReactDOM.render(<Show/>, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}