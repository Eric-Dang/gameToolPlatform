{"ast":null,"code":"var _jsxFileName = \"E:\\\\GitHub\\\\timespeed\\\\src\\\\dataMgr.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Tabs, Tab } from 'react-bootstrap-tabs'; // ------------------------------------------------------------------------------------------------------\n// 功能信息\n// ------------------------------------------------------------------------------------------------------\n// 功能配置表\n\nvar toolConfig = new Array(); // 显示的功能页功能索引\n\nvar showToolIndex = 0; // ------------------------------------------------------------------------------------------------------\n\nfunction createToolObj(name, render, index) {\n  return {\n    name: name,\n    render: render,\n    index: index\n  };\n} // 注册新功能\n\n\nexport function regNewTool(name, render) {\n  if (typeof render != \"function\") return false;\n  if (typeof name != \"string\") return false;\n  var to = createToolObj(name, render, toolConfig.length);\n  toolConfig.push(to);\n} // ------------------------------------------------------------------------------------------------------\n// 页面部分\n// ------------------------------------------------------------------------------------------------------\n// 创建一个功能按钮\n\nfunction ToolButton(props) {\n  return React.createElement(\"button\", {\n    class: \"ToolButton\",\n    id: props.id,\n    onClick: props.onClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, props.buttonName);\n}\n\nfunction setSelectIndex(selectid) {\n  console.log(\"toolUI %s\", showToolIndex, selectid);\n  if (selectid != undefined) showToolIndex = selectid;\n}\n\nclass Test1 extends React.Component {\n  render() {\n    return React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \" Test1 \");\n  }\n\n}\n\nclass Test2 extends React.Component {\n  render() {\n    return React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \" Test2 \");\n  }\n\n}\n\nvar ts = new Array();\nts.push(() => {\n  return React.createElement(Test1, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  });\n});\nts.push(() => {\n  return React.createElement(Test2, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  });\n}); // ts.push(Test1)\n// ts.push(Test2) \n// 获取所有功能按钮\n\nfunction GetShowInfo(f) {\n  var tabas = ts.map(x => {\n    return React.createElement(Tab, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \" \", x(), \" \");\n  });\n  return React.createElement(\"div\", {\n    className: \"BaseBorder\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"ToolButtonBorder\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, buttons), React.createElement(\"div\", {\n    className: \"ToolUIBorder\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, toolUI), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, tss));\n}\n\nexport function ShowInfo(f) {\n  return GetShowInfo(f);\n}","map":{"version":3,"sources":["E:\\GitHub\\timespeed\\src\\dataMgr.js"],"names":["React","ReactDOM","Tabs","Tab","toolConfig","Array","showToolIndex","createToolObj","name","render","index","regNewTool","to","length","push","ToolButton","props","id","onClick","buttonName","setSelectIndex","selectid","console","log","undefined","Test1","Component","Test2","ts","GetShowInfo","f","tabas","map","x","buttons","toolUI","tss","ShowInfo"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {Tabs, Tab} from 'react-bootstrap-tabs';\r\n// ------------------------------------------------------------------------------------------------------\r\n// 功能信息\r\n// ------------------------------------------------------------------------------------------------------\r\n// 功能配置表\r\nvar toolConfig = new Array()\r\n// 显示的功能页功能索引\r\nvar showToolIndex = 0\r\n// ------------------------------------------------------------------------------------------------------\r\nfunction createToolObj(name, render, index){\r\n    return {\r\n        name: name,\r\n        render:render,\r\n        index:index,\r\n    }\r\n}\r\n\r\n// 注册新功能\r\nexport function regNewTool(name, render){\r\n    if(typeof(render) != \"function\")\r\n        return false\r\n\r\n    if(typeof(name) != \"string\")\r\n        return false\r\n    \r\n    var to = createToolObj(name, render, toolConfig.length)\r\n    toolConfig.push(to)\r\n}\r\n// ------------------------------------------------------------------------------------------------------\r\n// 页面部分\r\n// ------------------------------------------------------------------------------------------------------\r\n// 创建一个功能按钮\r\nfunction ToolButton(props){\r\n    return(\r\n        <button class=\"ToolButton\" id={props.id} onClick = {props.onClick}>{props.buttonName}</button>\r\n    );\r\n}\r\n\r\nfunction setSelectIndex(selectid){\r\n    console.log(\"toolUI %s\", showToolIndex, selectid)\r\n    if (selectid != undefined)\r\n        showToolIndex = selectid;\r\n}\r\n\r\nclass Test1 extends React.Component {\r\n    render() {\r\n        return (\r\n            <button> Test1 </button>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nclass Test2 extends React.Component {\r\n    render() {\r\n        return (\r\n            <button> Test2 </button>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nvar ts = new Array()\r\nts.push(()=>{return (<Test1/>)})\r\nts.push(()=>{return (<Test2/>)})\r\n\r\n// ts.push(Test1)\r\n// ts.push(Test2) \r\n// 获取所有功能按钮\r\nfunction GetShowInfo(f){\r\n    var tabas = ts.map(\r\n        (x) => {\r\n            return (<Tab> {x()} </Tab>)\r\n        }\r\n    )\r\n\r\n\r\n    return(\r\n        <div className=\"BaseBorder\">\r\n            <div className=\"ToolButtonBorder\">\r\n            {buttons}\r\n            </div>\r\n            <div className=\"ToolUIBorder\">\r\n            {toolUI}\r\n            </div>\r\n            <div>\r\n                {tss}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport function ShowInfo(f){\r\n    return GetShowInfo(f)\r\n}\r\n"]},"metadata":{},"sourceType":"module"}