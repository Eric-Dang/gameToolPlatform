{"ast":null,"code":"var _jsxFileName = \"E:\\\\GitHub\\\\nytool\\\\src\\\\webClient\\\\modules\\\\querydb.js\";\n\nrequire('./timeSpeed.css');\n\nconst React = require('react');\n\nconst _require = require('../../dataMgr'),\n      regNewTool = _require.regNewTool;\n\nconst _require2 = require('react-bootstrap-table'),\n      BootstrapTable = _require2.BootstrapTable,\n      TableHeaderColumn = _require2.TableHeaderColumn;\n\nconst axios = require('axios');\n\nconst _require3 = require(\"../base/loadConfig\"),\n      loadConfig = _require3.loadConfig;\n\nclass QueryDB extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dbList: Array(),\n      selectList: Array(),\n      dbRet: null\n    };\n  }\n\n  recvServerData(response) {\n    console.log(\"1111111111111111111\", response.data.keys, response.data.datas);\n    this.setState({\n      dbRet: response.data\n    });\n  }\n\n  onclick() {\n    const selectList = this.state.selectList.slice();\n    axios.get('http://127.0.0.1:999/dbQuery', {\n      params: {\n        dblist: selectList\n      }\n    }).then(response => {\n      this.recvServerData(response);\n    }).catch(function (error) {\n      console.log(\"22222222222222222\", error);\n    });\n  } //E:\\\\GitHub\\\\nytool\\\\config\\\\dbConfig.json\n  //E:\\GitHub\\nytool\\config\\dbConfig.json\n\n\n  onloadConfig() {\n    const configPathText = document.getElementById('configPath');\n    console.log(\"configPathText\", configPathText.value);\n    loadConfig(configPathText.value, data => {\n      let dbList = Array();\n      data.dbList.forEach(x => {\n        if (undefined === x.userName) {\n          x.userName = data.default.userName;\n        }\n\n        if (undefined === x.password) {\n          x.password = data.default.password;\n        }\n\n        dbList.push(x);\n      });\n      this.setState({\n        dbList: dbList\n      });\n    });\n  }\n\n  onDBExecute() {\n    const sqlText = document.getElementById('sql');\n    const connectList = this.state.connectList.slice();\n    axios.get('http://localhost:999/dbQuery', {\n      params: {\n        speed: this.state.speed,\n        servers: JSON.stringify(connectList)\n      }\n    }).then(response => {\n      this.recvServerData(response);\n    }).catch(function (error) {\n      alert(\"异常：\\n\" + error.message);\n    });\n  }\n\n  render() {\n    const dbList = this.state.dbList.slice();\n    dbList.forEach((v, i) => {\n      dbList[i].id = i;\n    });\n    var dbshows = React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    });\n    const dbRet = this.state.dbRet;\n\n    if (dbRet) {\n      const datas = [];\n      dbRet.datas.forEach(x => {\n        x._id = datas.length;\n        datas.push(x);\n      });\n      const tt = dbRet.keys.map((i, k) => {\n        return React.createElement(TableHeaderColumn, {\n          dataField: i,\n          dataAlign: \"center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86\n          },\n          __self: this\n        }, i);\n      });\n      dbshows = React.createElement(BootstrapTable, {\n        data: datas,\n        striped: true,\n        hover: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(TableHeaderColumn, {\n        dataField: \"_id\",\n        isKey: true,\n        dataAlign: \"center\",\n        dataSort: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, \"ID\"), tt);\n    }\n\n    const selectRowProp = {\n      mode: 'checkbox',\n      bgColor: 'yellow',\n      clickToSelect: true,\n      onSelect: (data, isSelected, event, rowIndex) => {\n        console.log(\"select id\", data, isSelected, event, rowIndex);\n        const selectList = this.state.selectList.slice();\n        if (isSelected) selectList[rowIndex] = true;else selectList[rowIndex] = false;\n        this.setState({\n          selectList: selectList\n        });\n      }\n    };\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"dbconfig\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(\"text\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, \"\\u914D\\u7F6E\\u4FE1\\u606F\"), React.createElement(\"div\", {\n      className: \"showdiv\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(\"text\", {\n      className: \"ipText\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, \"\\u914D\\u7F6E\\u5730\\u5740:\"), React.createElement(\"textarea\", {\n      type: \"text\",\n      id: \"configPath\",\n      className: \"configPath\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"multButton\",\n      onClick: () => {\n        this.onloadConfig();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, \"\\u52A0\\u8F7D\\u914D\\u7F6E\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }), React.createElement(BootstrapTable, {\n      data: dbList,\n      striped: true,\n      hover: true,\n      selectRow: selectRowProp,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(TableHeaderColumn, {\n      dataField: \"id\",\n      isKey: true,\n      dataAlign: \"center\",\n      dataSort: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"ID\"), React.createElement(TableHeaderColumn, {\n      dataField: \"serverID\",\n      dataAlign: \"center\",\n      dataSort: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \"server ID\"), React.createElement(TableHeaderColumn, {\n      dataField: \"dbIP\",\n      dataAlign: \"center\",\n      dataSort: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \"Server IP\"), React.createElement(TableHeaderColumn, {\n      dataField: \"port\",\n      dataAlign: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \"Server Port\")))), React.createElement(\"label\", {\n      className: \"dbresult\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(\"text\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, \"\\u67E5\\u8BE2\\u7ED3\\u679C\"), React.createElement(\"div\", {\n      className: \"showdiv\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(\"text\", {\n      className: \"ipText\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, \"SQL:\"), React.createElement(\"textarea\", {\n      type: \"text\",\n      id: \"sql\",\n      className: \"dbSql\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"dbExecute\",\n      onClick: () => {\n        this.onDBExecute();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, \"\\u6267\\u884C\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }), dbshows)));\n  }\n\n}\n\nmodule.exports = {\n  init: function () {\n    regNewTool(\"数据查询\", () => {\n      return React.createElement(QueryDB, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      });\n    });\n  }\n};","map":{"version":3,"sources":["E:\\GitHub\\nytool\\src\\webClient\\modules\\querydb.js"],"names":["require","React","regNewTool","BootstrapTable","TableHeaderColumn","axios","loadConfig","QueryDB","Component","constructor","props","state","dbList","Array","selectList","dbRet","recvServerData","response","console","log","data","keys","datas","setState","onclick","slice","get","params","dblist","then","catch","error","onloadConfig","configPathText","document","getElementById","value","forEach","x","undefined","userName","default","password","push","onDBExecute","sqlText","connectList","speed","servers","JSON","stringify","alert","message","render","v","i","id","dbshows","_id","length","tt","map","k","selectRowProp","mode","bgColor","clickToSelect","onSelect","isSelected","event","rowIndex","module","exports","init"],"mappings":"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","sourcesContent":["require('./timeSpeed.css')\r\n\r\nconst React = require('react')\r\nconst {regNewTool} = require('../../dataMgr')\r\nconst { BootstrapTable, TableHeaderColumn } = require('react-bootstrap-table')\r\nconst axios = require('axios');\r\nconst {loadConfig} = require(\"../base/loadConfig\")\r\n\r\nclass QueryDB extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            dbList: Array(),\r\n            selectList:Array(),\r\n            dbRet:null,\r\n        };\r\n    }\r\n\r\n    recvServerData(response){\r\n        console.log(\"1111111111111111111\", response.data.keys, response.data.datas);\r\n        this.setState({dbRet:response.data})\r\n    }\r\n    onclick(){\r\n        const selectList = this.state.selectList.slice()\r\n        axios.get('http://127.0.0.1:999/dbQuery', {\r\n            params: {\r\n                dblist:selectList\r\n            }\r\n        }).then((response)=>{\r\n            this.recvServerData(response)\r\n        }).catch(function (error) {\r\n            console.log(\"22222222222222222\", error);\r\n        });\r\n    }\r\n//E:\\\\GitHub\\\\nytool\\\\config\\\\dbConfig.json\r\n//E:\\GitHub\\nytool\\config\\dbConfig.json\r\n    onloadConfig()\r\n    {\r\n        const configPathText = document.getElementById('configPath');\r\n        console.log(\"configPathText\", configPathText.value)\r\n        loadConfig(configPathText.value, data=>{\r\n            let dbList = Array()\r\n            data.dbList.forEach(x=>{\r\n                if(undefined === x.userName){\r\n                    x.userName = data.default.userName\r\n                }\r\n                if(undefined === x.password){\r\n                    x.password = data.default.password\r\n                }\r\n                dbList.push(x)\r\n            })\r\n            this.setState({dbList:dbList})\r\n        })\r\n    }\r\n\r\n    onDBExecute()\r\n    {\r\n        const sqlText = document.getElementById('sql');\r\n        const connectList = this.state.connectList.slice()\r\n        axios.get('http://localhost:999/dbQuery', {\r\n            params: {\r\n                speed: this.state.speed,\r\n                servers:JSON.stringify(connectList)\r\n            }\r\n        }).then((response)=>{this.recvServerData(response)}).catch(function (error) {\r\n            alert(\"异常：\\n\" + error.message)\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const dbList = this.state.dbList.slice()\r\n        dbList.forEach((v,i)=>{\r\n            dbList[i].id = i\r\n        })\r\n\r\n        var dbshows = (<div/>)\r\n        const dbRet = this.state.dbRet\r\n        if(dbRet){\r\n            const datas = []\r\n            dbRet.datas.forEach((x)=>{\r\n                x._id = datas.length\r\n                datas.push(x)\r\n            })\r\n    \r\n            const tt = dbRet.keys.map((i, k)=>{\r\n                return (<TableHeaderColumn dataField={i} dataAlign=\"center\">{i}</TableHeaderColumn>)\r\n            })\r\n    \r\n            dbshows = (\r\n                <BootstrapTable data={datas} striped={true} hover={true}>\r\n                    <TableHeaderColumn dataField=\"_id\" isKey={true} dataAlign=\"center\" dataSort={true}>ID</TableHeaderColumn>\r\n                    {tt}\r\n                </BootstrapTable>\r\n            )\r\n        }\r\n\r\n        const selectRowProp = {\r\n            mode: 'checkbox',\r\n            bgColor: 'yellow',\r\n            clickToSelect: true,\r\n            onSelect:(data,isSelected, event, rowIndex)=>{\r\n                console.log(\"select id\",data,isSelected, event, rowIndex)\r\n                const selectList = this.state.selectList.slice()\r\n                if(isSelected)\r\n                    selectList[rowIndex] = true\r\n                else\r\n                    selectList[rowIndex] = false\r\n\r\n                this.setState({selectList:selectList})\r\n            }\r\n        };\r\n\r\n        return (\r\n            <div>\r\n                <label className=\"dbconfig\">\r\n                    <text>配置信息</text>\r\n                    <div className=\"showdiv\">\r\n                        <text className=\"ipText\">配置地址:</text>\r\n                        <textarea type=\"text\" id=\"configPath\" className=\"configPath\"/>\r\n                        <button className=\"multButton\" onClick={()=>{this.onloadConfig()}}>加载配置</button><br/>\r\n                        <hr/>\r\n                        <BootstrapTable data={dbList} striped={true} hover={true} selectRow={selectRowProp}>\r\n                            <TableHeaderColumn dataField=\"id\" isKey={true} dataAlign=\"center\" dataSort={true}>ID</TableHeaderColumn>\r\n                            <TableHeaderColumn dataField=\"serverID\" dataAlign=\"center\" dataSort={true}>server ID</TableHeaderColumn>\r\n                            <TableHeaderColumn dataField=\"dbIP\" dataAlign=\"center\" dataSort={true}>Server IP</TableHeaderColumn>\r\n                            <TableHeaderColumn dataField=\"port\" dataAlign=\"center\">Server Port</TableHeaderColumn>\r\n                        </BootstrapTable>\r\n                    </div>\r\n                </label>\r\n                <label className=\"dbresult\">\r\n                    <text>查询结果</text>\r\n                    <div className=\"showdiv\">\r\n                        <text className=\"ipText\">SQL:</text>\r\n                        <textarea type=\"text\" id=\"sql\" className=\"dbSql\"/>\r\n                        <button className=\"dbExecute\" onClick={()=>{this.onDBExecute()}}>执行</button><br/>\r\n                        <hr/>\r\n                        {dbshows}\r\n                    </div>\r\n                </label>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nmodule.exports = {\r\n    init:function(){regNewTool(\"数据查询\", ()=>{return (<QueryDB/>)})}\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}