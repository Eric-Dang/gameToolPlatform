{"ast":null,"code":"var _jsxFileName = \"E:\\\\GitHub\\\\nytool\\\\src\\\\webClient\\\\modules\\\\querydb.js\";\nimport React from 'react';\nimport * as dataMgr from '../../dataMgr';\nimport './timeSpeed.css';\nimport { BootstrapTable, TableHeaderColumn } from 'react-bootstrap-table';\n\nconst axios = require('axios');\n\nclass QueryDB extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dbList: Array(),\n      selectList: Array(),\n      dbRet: null\n    };\n  }\n\n  recvServerData(response) {\n    console.log(\"1111111111111111111\", response.data.keys, response.data.datas);\n    this.setState({\n      dbRet: response.data\n    });\n  }\n\n  onclick() {\n    const selectList = this.state.selectList.slice();\n    axios.get('http://127.0.0.1:999/dbQuery', {\n      params: {\n        dblist: selectList\n      }\n    }).then(response => {\n      this.recvServerData(response);\n    }).catch(function (error) {\n      console.log(\"22222222222222222\", error);\n    });\n  }\n\n  onadd() {\n    const connectList = this.state.connectList.slice();\n    var hasAdd = false;\n    connectList.forEach(v => {\n      if (v.ip == ipText.value && v.port == portText.value) hasAdd = true;\n    });\n\n    if (!hasAdd) {\n      connectList.push({\n        ip: ipText.value,\n        port: portText.value,\n        id: connectList.length + 1\n      });\n      this.setState({\n        connectList: connectList\n      });\n    }\n  }\n\n  onspeed() {\n    var multText = document.getElementById('mult');\n    this.setState({\n      speed: multText.value\n    });\n  }\n\n  ondel() {\n    const connectList = this.state.connectList.slice();\n    const selectList = this.state.selectList.slice();\n\n    for (var i = selectList.length; i >= 0; i--) {\n      if (selectList[i] == true) connectList.splice(i, 1);\n    }\n\n    selectList.splice(0);\n    this.setState({\n      connectList: connectList\n    });\n    this.setState({\n      selectList: selectList\n    });\n  }\n\n  render() {\n    const connectList = this.state.connectList.slice();\n    connectList.forEach((v, i) => {\n      connectList[i].id = i;\n    });\n    var dbshows = React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    });\n    const dbRet = this.state.dbRet;\n\n    if (dbRet) {\n      const datas = [];\n      dbRet.datas.forEach(x => {\n        x._id = datas.length;\n        datas.push(x);\n      });\n      const tt = dbRet.keys.map((i, k) => {\n        return React.createElement(TableHeaderColumn, {\n          dataField: i,\n          dataAlign: \"center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86\n          },\n          __self: this\n        }, i);\n      });\n      dbshows = React.createElement(BootstrapTable, {\n        data: datas,\n        striped: true,\n        hover: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(TableHeaderColumn, {\n        dataField: \"_id\",\n        isKey: true,\n        dataAlign: \"center\",\n        dataSort: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, \"ID\"), tt);\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"showdiv\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"text\", {\n      className: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"\\u5DF2\\u6DFB\\u52A0\\u670D\\u52A1\\u5668\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }), React.createElement(BootstrapTable, {\n      data: connectList,\n      striped: true,\n      hover: true,\n      selectRow: selectRowProp,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(TableHeaderColumn, {\n      dataField: \"id\",\n      isKey: true,\n      dataAlign: \"center\",\n      dataSort: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"ID\"), React.createElement(TableHeaderColumn, {\n      dataField: \"ip\",\n      dataAlign: \"center\",\n      dataSort: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"Server IP\"), React.createElement(TableHeaderColumn, {\n      dataField: \"port\",\n      dataAlign: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"Server Port\")), React.createElement(\"button\", {\n      className: \"execButton\",\n      onClick: () => {\n        this.onclick();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \" \\u6267\\u884C \"), React.createElement(\"button\", {\n      className: \"delButton\",\n      onClick: () => {\n        this.ondel();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \" \\u5220\\u9664 \"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    })), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, dbshows));\n  }\n\n}\n\ndataMgr.regNewTool(\"数据查询\", () => {\n  return React.createElement(QueryDB, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  });\n});","map":{"version":3,"sources":["E:\\GitHub\\nytool\\src\\webClient\\modules\\querydb.js"],"names":["React","dataMgr","BootstrapTable","TableHeaderColumn","axios","require","QueryDB","Component","constructor","props","state","dbList","Array","selectList","dbRet","recvServerData","response","console","log","data","keys","datas","setState","onclick","slice","get","params","dblist","then","catch","error","onadd","connectList","hasAdd","forEach","v","ip","ipText","value","port","portText","push","id","length","onspeed","multText","document","getElementById","speed","ondel","i","splice","render","dbshows","x","_id","tt","map","k","selectRowProp","regNewTool"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport * as dataMgr from '../../dataMgr';\r\nimport './timeSpeed.css';\r\nimport { BootstrapTable, TableHeaderColumn } from 'react-bootstrap-table';\r\nconst axios = require('axios');\r\n\r\nclass QueryDB extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            dbList: Array(),\r\n            selectList:Array(),\r\n            dbRet:null,\r\n        };\r\n    }\r\n\r\n    recvServerData(response){\r\n        console.log(\"1111111111111111111\", response.data.keys, response.data.datas);\r\n        this.setState({dbRet:response.data})\r\n    }\r\n    onclick(){\r\n        const selectList = this.state.selectList.slice()\r\n        axios.get('http://127.0.0.1:999/dbQuery', {\r\n            params: {\r\n                dblist:selectList\r\n            }\r\n        }).then((response)=>{\r\n            this.recvServerData(response)\r\n        }).catch(function (error) {\r\n            console.log(\"22222222222222222\", error);\r\n        });\r\n    }\r\n\r\n    onadd(){\r\n        const connectList = this.state.connectList.slice()\r\n\r\n        var hasAdd = false\r\n        connectList.forEach((v) => {\r\n            if (v.ip == ipText.value && v.port == portText.value)\r\n                hasAdd = true\r\n        });\r\n\r\n        if (!hasAdd)\r\n        {\r\n            connectList.push({ip:ipText.value, port:portText.value, id:connectList.length + 1})\r\n            this.setState({connectList:connectList})\r\n        }\r\n    }\r\n    onspeed()\r\n    {\r\n        var multText = document.getElementById('mult');\r\n        this.setState({speed:multText.value})\r\n    }\r\n\r\n    ondel()\r\n    {\r\n        const connectList = this.state.connectList.slice()\r\n        const selectList = this.state.selectList.slice()\r\n        for(var i = selectList.length; i >= 0; i--)\r\n        {\r\n            if(selectList[i] == true)\r\n                connectList.splice(i, 1)\r\n        }\r\n        selectList.splice(0)\r\n        this.setState({connectList:connectList})\r\n        this.setState({selectList:selectList})\r\n    }\r\n\r\n    render() {\r\n        const connectList = this.state.connectList.slice()\r\n        connectList.forEach((v,i)=>{\r\n            connectList[i].id = i\r\n        })\r\n\r\n\r\n        var dbshows = (<div/>)\r\n        const dbRet = this.state.dbRet\r\n        if(dbRet){\r\n            const datas = []\r\n            dbRet.datas.forEach((x)=>{\r\n                x._id = datas.length\r\n                datas.push(x)\r\n            })\r\n    \r\n            const tt = dbRet.keys.map((i, k)=>{\r\n                return (<TableHeaderColumn dataField={i} dataAlign=\"center\">{i}</TableHeaderColumn>)\r\n            })\r\n    \r\n            dbshows = (\r\n                <BootstrapTable data={datas} striped={true} hover={true}>\r\n                    <TableHeaderColumn dataField=\"_id\" isKey={true} dataAlign=\"center\" dataSort={true}>ID</TableHeaderColumn>\r\n                    {tt}\r\n                </BootstrapTable>\r\n            )\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"showdiv\">\r\n                    <text className='title'>已添加服务器</text><br/><br/>\r\n                    <BootstrapTable data={connectList} striped={true} hover={true} selectRow={selectRowProp}>\r\n                        <TableHeaderColumn dataField=\"id\" isKey={true} dataAlign=\"center\" dataSort={true}>ID</TableHeaderColumn>\r\n                        <TableHeaderColumn dataField=\"ip\" dataAlign=\"center\" dataSort={true}>Server IP</TableHeaderColumn>\r\n                        <TableHeaderColumn dataField=\"port\" dataAlign=\"center\">Server Port</TableHeaderColumn>\r\n                    </BootstrapTable>\r\n                    <button className=\"execButton\" onClick={()=>{this.onclick()}}> 执行 </button>\r\n                    <button className=\"delButton\" onClick={()=>{this.ondel()}}> 删除 </button><br/>\r\n                </div>\r\n                <hr />\r\n                <div>\r\n                    {dbshows}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\ndataMgr.regNewTool(\"数据查询\", ()=>{return (<QueryDB/>)})\r\n"]},"metadata":{},"sourceType":"module"}