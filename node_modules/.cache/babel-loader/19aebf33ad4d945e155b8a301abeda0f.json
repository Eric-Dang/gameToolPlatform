{"ast":null,"code":"var _jsxFileName = \"E:\\\\GitHub\\\\nytool\\\\src\\\\webClient\\\\modules\\\\timeSpeed.js\";\nimport './timeSpeed.css';\n\nconst React = require('react');\n\nconst _require = require('../../dataMgr'),\n      regNewTool = _require.regNewTool;\n\nconst _require2 = require('react-bootstrap-table'),\n      BootstrapTable = _require2.BootstrapTable,\n      TableHeaderColumn = _require2.TableHeaderColumn;\n\nconst axios = require('axios');\n\nclass TimeSpeed extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      connectList: Array(),\n      speed: 0,\n      selectList: Array()\n    };\n  }\n\n  recvServerData(response) {\n    alert(response.data.info);\n  }\n\n  onclick() {\n    const connectList = this.state.connectList.slice();\n    axios.get('http://localhost:999/changeTimeSpeed', {\n      params: {\n        speed: this.state.speed,\n        servers: JSON.stringify(connectList)\n      }\n    }).then(response => {\n      this.recvServerData(response);\n    }).catch(function (error) {\n      alert(\"异常：\\n\" + error.message);\n    });\n  }\n\n  onadd() {\n    const connectList = this.state.connectList.slice();\n    var ipText = document.getElementById('ip');\n    var portText = document.getElementById('port');\n    var hasAdd = false;\n    connectList.forEach(v => {\n      if (v.ip == ipText.value && v.port == portText.value) hasAdd = true;\n    });\n\n    if (!hasAdd) {\n      connectList.push({\n        ip: ipText.value,\n        port: portText.value,\n        id: connectList.length + 1\n      });\n      this.setState({\n        connectList: connectList\n      });\n    }\n  }\n\n  onspeed() {\n    var multText = document.getElementById('mult');\n    this.setState({\n      speed: multText.value\n    });\n  }\n\n  ondel() {\n    const connectList = this.state.connectList.slice();\n    const selectList = this.state.selectList.slice();\n\n    for (var i = selectList.length; i >= 0; i--) {\n      if (selectList[i] == true) connectList.splice(i, 1);\n    }\n\n    selectList.splice(0);\n    this.setState({\n      connectList: connectList\n    });\n    this.setState({\n      selectList: selectList\n    });\n  }\n\n  render() {\n    const connectList = this.state.connectList.slice();\n    connectList.forEach((v, i) => {\n      connectList[i].id = i;\n    });\n    const selectRowProp = {\n      mode: 'checkbox',\n      bgColor: 'yellow',\n      clickToSelect: true,\n      onSelect: (data, isSelected, event, rowIndex) => {\n        console.log(\"select id\", data, isSelected, event, rowIndex);\n        const selectList = this.state.selectList.slice();\n        if (isSelected) selectList[rowIndex] = true;else selectList[rowIndex] = false;\n        this.setState({\n          selectList: selectList\n        });\n      }\n    };\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"multdiv\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"text\", {\n      className: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"\\u901F\\u5EA6 \"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }), React.createElement(\"text\", {\n      className: \"multText\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"\\u52A0\\u901F\\u500D\\u6570:\"), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"mult\",\n      className: \"multInput\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"multButton\",\n      onClick: () => {\n        this.onspeed();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \" \\u4FEE\\u6539\\u901F\\u5EA6 \"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    })), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"serverdiv\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"text\", {\n      className: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"\\u670D\\u52A1\\u5668\\u914D\\u7F6E \"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }), React.createElement(\"text\", {\n      className: \"ipText\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"\\u670D\\u52A1\\u5668IP:\"), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"ip\",\n      className: \"ipInput\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }), React.createElement(\"text\", {\n      className: \"portText\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"\\u7AEF\\u53E3:\"), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"port\",\n      className: \"portInput\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"addButton\",\n      onClick: () => {\n        this.onadd();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \" \\u6DFB\\u52A0 \"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    })), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"showdiv\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"text\", {\n      className: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"\\u5DF2\\u6DFB\\u52A0\\u670D\\u52A1\\u5668\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }), React.createElement(BootstrapTable, {\n      data: connectList,\n      striped: true,\n      hover: true,\n      selectRow: selectRowProp,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(TableHeaderColumn, {\n      dataField: \"id\",\n      isKey: true,\n      dataAlign: \"center\",\n      dataSort: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"ID\"), React.createElement(TableHeaderColumn, {\n      dataField: \"ip\",\n      dataAlign: \"center\",\n      dataSort: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"Server IP\"), React.createElement(TableHeaderColumn, {\n      dataField: \"port\",\n      dataAlign: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"Server Port\")), React.createElement(\"button\", {\n      className: \"execButton\",\n      onClick: () => {\n        this.onclick();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \" \\u6267\\u884C \"), React.createElement(\"button\", {\n      className: \"delButton\",\n      onClick: () => {\n        this.ondel();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \" \\u5220\\u9664 \"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    })));\n  }\n\n}\n\nmodule.exports = {\n  init: function () {\n    regNewTool(\"时间加速\", () => {\n      return React.createElement(TimeSpeed, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      });\n    });\n  }\n};","map":{"version":3,"sources":["E:\\GitHub\\nytool\\src\\webClient\\modules\\timeSpeed.js"],"names":["React","require","regNewTool","BootstrapTable","TableHeaderColumn","axios","TimeSpeed","Component","constructor","props","state","connectList","Array","speed","selectList","recvServerData","response","alert","data","info","onclick","slice","get","params","servers","JSON","stringify","then","catch","error","message","onadd","ipText","document","getElementById","portText","hasAdd","forEach","v","ip","value","port","push","id","length","setState","onspeed","multText","ondel","i","splice","render","selectRowProp","mode","bgColor","clickToSelect","onSelect","isSelected","event","rowIndex","console","log","module","exports","init"],"mappings":"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","sourcesContent":["import './timeSpeed.css';\r\nconst React = require('react')\r\nconst {regNewTool} = require('../../dataMgr')\r\nconst { BootstrapTable, TableHeaderColumn } = require('react-bootstrap-table')\r\nconst axios = require('axios');\r\n\r\nclass TimeSpeed extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            connectList: Array(),\r\n            speed: 0,\r\n            selectList: Array(),            \r\n        };\r\n    }\r\n\r\n    recvServerData(response){\r\n        alert(response.data.info)\r\n    }\r\n    onclick(){\r\n        const connectList = this.state.connectList.slice()\r\n        axios.get('http://localhost:999/changeTimeSpeed', {\r\n            params: {\r\n                speed: this.state.speed,\r\n                servers:JSON.stringify(connectList)\r\n            }\r\n        }).then((response)=>{this.recvServerData(response)}).catch(function (error) {\r\n            alert(\"异常：\\n\" + error.message)\r\n        });\r\n    }\r\n\r\n    onadd(){\r\n        const connectList = this.state.connectList.slice()\r\n        var ipText = document.getElementById('ip');\r\n        var portText = document.getElementById('port');\r\n        var hasAdd = false\r\n        connectList.forEach((v) => {\r\n            if (v.ip == ipText.value && v.port == portText.value)\r\n                hasAdd = true\r\n        });\r\n\r\n        if (!hasAdd)\r\n        {\r\n            connectList.push({ip:ipText.value, port:portText.value, id:connectList.length + 1})\r\n            this.setState({connectList:connectList})\r\n        }\r\n    }\r\n    onspeed()\r\n    {\r\n        var multText = document.getElementById('mult');\r\n        this.setState({speed:multText.value})\r\n    }\r\n\r\n    ondel()\r\n    {\r\n        const connectList = this.state.connectList.slice()\r\n        const selectList = this.state.selectList.slice()\r\n        for(var i = selectList.length; i >= 0; i--)\r\n        {\r\n            if(selectList[i] == true)\r\n                connectList.splice(i, 1)\r\n        }\r\n        selectList.splice(0)\r\n        this.setState({connectList:connectList})\r\n        this.setState({selectList:selectList})\r\n    }\r\n\r\n    render() {\r\n        const connectList = this.state.connectList.slice()\r\n        connectList.forEach((v,i)=>{\r\n            connectList[i].id = i\r\n        })\r\n        const selectRowProp = {\r\n            mode: 'checkbox',\r\n            bgColor: 'yellow',\r\n            clickToSelect: true,\r\n            onSelect:(data,isSelected, event, rowIndex)=>{\r\n                console.log(\"select id\",data,isSelected, event, rowIndex)\r\n                const selectList = this.state.selectList.slice()\r\n                if(isSelected)\r\n                    selectList[rowIndex] = true\r\n                else\r\n                    selectList[rowIndex] = false\r\n\r\n                this.setState({selectList:selectList})\r\n            }\r\n        };\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"multdiv\">\r\n                    <text className='title'>速度 </text><br/><br/>\r\n                    <text className=\"multText\">加速倍数:</text><input type=\"text\" id=\"mult\" className=\"multInput\"/>\r\n                    <button className=\"multButton\" onClick={()=>{this.onspeed()}}> 修改速度 </button><br/>\r\n                </div>\r\n                <hr />\r\n                <div className=\"serverdiv\">\r\n                    <text className='title'>服务器配置 </text><br/><br/>\r\n                    <text className=\"ipText\">服务器IP:</text><input type=\"text\" id=\"ip\" className=\"ipInput\"/><br/>\r\n                    <text className=\"portText\">端口:</text><input type=\"text\" id=\"port\" className=\"portInput\"/><br/>\r\n                    <button className=\"addButton\" onClick={()=>{this.onadd()}}> 添加 </button><br/>\r\n                </div>\r\n                <hr />\r\n                <div className=\"showdiv\">\r\n                    <text className='title'>已添加服务器</text><br/><br/>\r\n                    <BootstrapTable data={connectList} striped={true} hover={true} selectRow={selectRowProp}>\r\n                        <TableHeaderColumn dataField=\"id\" isKey={true} dataAlign=\"center\" dataSort={true}>ID</TableHeaderColumn>\r\n                        <TableHeaderColumn dataField=\"ip\" dataAlign=\"center\" dataSort={true}>Server IP</TableHeaderColumn>\r\n                        <TableHeaderColumn dataField=\"port\" dataAlign=\"center\">Server Port</TableHeaderColumn>\r\n                    </BootstrapTable>\r\n                    <button className=\"execButton\" onClick={()=>{this.onclick()}}> 执行 </button>\r\n                    <button className=\"delButton\" onClick={()=>{this.ondel()}}> 删除 </button><br/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nmodule.exports = {\r\n    init:function(){regNewTool(\"时间加速\", ()=>{return (<TimeSpeed/>)})}\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}