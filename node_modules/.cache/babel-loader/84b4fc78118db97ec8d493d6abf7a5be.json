{"ast":null,"code":"var _jsxFileName = \"E:\\\\GitHub\\\\nytool\\\\src\\\\dataMgr.js\";\nimport React from 'react';\nimport { Tabs, Tab } from 'react-bootstrap-tabs';\nimport './dataMgr.css'; // ------------------------------------------------------------------------------------------------------\n// 功能信息\n// ------------------------------------------------------------------------------------------------------\n// 功能配置表\n\nvar toolConfig = new Array(); // ------------------------------------------------------------------------------------------------------\n\nfunction createToolObj(name, render) {\n  return {\n    name: name,\n    render: render\n  };\n} // 注册新功能\n// @name: 标签页名字\n// @render: 页面绘制函数 返回为绘制内容\n// 例: function render() return (<ToolClass/>)\n\n\nexport function regNewTool(name, render) {\n  if (typeof render != \"function\") return false;\n  if (typeof name != \"string\") return false;\n  var to = createToolObj(name, render);\n  toolConfig.push(to);\n} // ------------------------------------------------------------------------------------------------------\n// 页面部分\n// ------------------------------------------------------------------------------------------------------\n// 获取所有功能按钮\n\nfunction GetShowInfo(f) {\n  if (toolConfig.length == 0) return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"text\", {\n    className: \"defaultTip\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"\\u8FD8\\u6CA1\\u65B0\\u529F\\u80FD\"));\n  var webShows = toolConfig.map(x => {\n    return React.createElement(Tab, {\n      label: x.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \" \", x.render(), \" \");\n  });\n  return React.createElement(\"div\", {\n    className: \"BaseBorder\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(Tabs, {\n    className: \"ToolButtonBorder\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, webShows));\n}\n\nexport function ShowInfo(f) {\n  return GetShowInfo(f);\n} // ------------------------------------------------------------------------------------------------------\n// 本地服务接口\n// ------------------------------------------------------------------------------------------------------\n\nvar clientReqProcess = {}; // ------------------------------------------------------------------------------------------------------\n// @page: 请求的页面\n// @proFun(clientData, response): 处理函数\n// @proFun @clientData: 客户端发送的请求参数\n// @proFun @response: http对应的response对象(简单实用参考serverTimeSpeed.js)\n\nexport function regNewReq(page, proFun) {\n  if (clientReqProcess[page]) {\n    console.error(\"regNewReq repeat reg! %s\", page);\n  } else {\n    clientReqProcess[page] = proFun;\n  }\n} // 根据页面获取处理函数 如果不存在则返回默认函数\n\nexport function getReqProcessFun(page) {\n  if (clientReqProcess[page]) {\n    return clientReqProcess[page];\n  }\n\n  return (clientData, response) => {\n    console.error(\"getReqProcessFun not process fun! %s\", page);\n    response.writeHead(404, \"对应请求无法处理！\");\n    response.end();\n  };\n}","map":{"version":3,"sources":["E:\\GitHub\\nytool\\src\\dataMgr.js"],"names":["React","Tabs","Tab","toolConfig","Array","createToolObj","name","render","regNewTool","to","push","GetShowInfo","f","length","webShows","map","x","ShowInfo","clientReqProcess","regNewReq","page","proFun","console","error","getReqProcessFun","clientData","response","writeHead","end"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,IAAR,EAAcC,GAAd,QAAwB,sBAAxB;AACA,OAAO,eAAP,C,CACA;AACA;AACA;AACA;;AACA,IAAIC,UAAU,GAAG,IAAIC,KAAJ,EAAjB,C,CACA;;AACA,SAASC,aAAT,CAAuBC,IAAvB,EAA6BC,MAA7B,EAAoC;AAChC,SAAO;AACHD,IAAAA,IAAI,EAAEA,IADH;AAEHC,IAAAA,MAAM,EAACA;AAFJ,GAAP;AAIH,C,CAED;AACA;AACA;AACA;;;AACA,OAAO,SAASC,UAAT,CAAoBF,IAApB,EAA0BC,MAA1B,EAAiC;AACpC,MAAG,OAAOA,MAAP,IAAkB,UAArB,EACI,OAAO,KAAP;AAEJ,MAAG,OAAOD,IAAP,IAAgB,QAAnB,EACI,OAAO,KAAP;AAEJ,MAAIG,EAAE,GAAGJ,aAAa,CAACC,IAAD,EAAOC,MAAP,CAAtB;AACAJ,EAAAA,UAAU,CAACO,IAAX,CAAgBD,EAAhB;AACH,C,CACD;AACA;AACA;AACA;;AACA,SAASE,WAAT,CAAqBC,CAArB,EAAuB;AACnB,MAAIT,UAAU,CAACU,MAAX,IAAqB,CAAzB,EACI,OACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAM,IAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCADA,CADA;AAKJ,MAAIC,QAAQ,GAAGX,UAAU,CAACY,GAAX,CACVC,CAAD,IAAO;AACH,WAAQ,oBAAC,GAAD;AAAK,MAAA,KAAK,EAAEA,CAAC,CAACV,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAsBU,CAAC,CAACT,MAAF,EAAtB,MAAR;AACH,GAHU,CAAf;AAKA,SACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,kBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCO,QADD,CADJ,CADJ;AAOH;;AAGD,OAAO,SAASG,QAAT,CAAkBL,CAAlB,EAAoB;AACvB,SAAOD,WAAW,CAACC,CAAD,CAAlB;AACH,C,CAED;AACA;AACA;;AACA,IAAIM,gBAAgB,GAAG,EAAvB,C,CACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,SAAT,CAAmBC,IAAnB,EAAyBC,MAAzB,EAAgC;AACnC,MAAGH,gBAAgB,CAACE,IAAD,CAAnB,EAA0B;AACtBE,IAAAA,OAAO,CAACC,KAAR,CAAc,0BAAd,EAA0CH,IAA1C;AACH,GAFD,MAGI;AACAF,IAAAA,gBAAgB,CAACE,IAAD,CAAhB,GAAyBC,MAAzB;AACH;AACJ,C,CACD;;AACA,OAAO,SAASG,gBAAT,CAA0BJ,IAA1B,EAA+B;AAClC,MAAGF,gBAAgB,CAACE,IAAD,CAAnB,EAA0B;AACtB,WAAOF,gBAAgB,CAACE,IAAD,CAAvB;AACH;;AAED,SAAO,CAACK,UAAD,EAAaC,QAAb,KAAwB;AAC3BJ,IAAAA,OAAO,CAACC,KAAR,CAAc,sCAAd,EAAsDH,IAAtD;AACAM,IAAAA,QAAQ,CAACC,SAAT,CAAmB,GAAnB,EAAwB,WAAxB;AACAD,IAAAA,QAAQ,CAACE,GAAT;AACH,GAJD;AAKH","sourcesContent":["import React from 'react';\r\nimport {Tabs, Tab} from 'react-bootstrap-tabs';\r\nimport './dataMgr.css';\r\n// ------------------------------------------------------------------------------------------------------\r\n// 功能信息\r\n// ------------------------------------------------------------------------------------------------------\r\n// 功能配置表\r\nvar toolConfig = new Array()\r\n// ------------------------------------------------------------------------------------------------------\r\nfunction createToolObj(name, render){\r\n    return {\r\n        name: name,\r\n        render:render,\r\n    }\r\n}\r\n\r\n// 注册新功能\r\n// @name: 标签页名字\r\n// @render: 页面绘制函数 返回为绘制内容\r\n// 例: function render() return (<ToolClass/>)\r\nexport function regNewTool(name, render){\r\n    if(typeof(render) != \"function\")\r\n        return false\r\n\r\n    if(typeof(name) != \"string\")\r\n        return false\r\n    \r\n    var to = createToolObj(name, render)\r\n    toolConfig.push(to)\r\n}\r\n// ------------------------------------------------------------------------------------------------------\r\n// 页面部分\r\n// ------------------------------------------------------------------------------------------------------\r\n// 获取所有功能按钮\r\nfunction GetShowInfo(f){\r\n    if (toolConfig.length == 0)\r\n        return (\r\n        <div>\r\n        <text className=\"defaultTip\">还没新功能</text>\r\n        </div>);\r\n\r\n    var webShows = toolConfig.map(\r\n        (x) => {\r\n            return (<Tab label={x.name}> {x.render()} </Tab>)\r\n        }\r\n    )\r\n    return(\r\n        <div className=\"BaseBorder\">\r\n            <Tabs className=\"ToolButtonBorder\">\r\n            {webShows}\r\n            </Tabs>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport function ShowInfo(f){\r\n    return GetShowInfo(f)\r\n}\r\n\r\n// ------------------------------------------------------------------------------------------------------\r\n// 本地服务接口\r\n// ------------------------------------------------------------------------------------------------------\r\nvar clientReqProcess = {}\r\n// ------------------------------------------------------------------------------------------------------\r\n// @page: 请求的页面\r\n// @proFun(clientData, response): 处理函数\r\n// @proFun @clientData: 客户端发送的请求参数\r\n// @proFun @response: http对应的response对象(简单实用参考serverTimeSpeed.js)\r\nexport function regNewReq(page, proFun){\r\n    if(clientReqProcess[page]){\r\n        console.error(\"regNewReq repeat reg! %s\", page)\r\n    }\r\n    else{\r\n        clientReqProcess[page] = proFun\r\n    }\r\n}\r\n// 根据页面获取处理函数 如果不存在则返回默认函数\r\nexport function getReqProcessFun(page){\r\n    if(clientReqProcess[page]){\r\n        return clientReqProcess[page]\r\n    }\r\n\r\n    return (clientData, response)=>{\r\n        console.error(\"getReqProcessFun not process fun! %s\", page)\r\n        response.writeHead(404, \"对应请求无法处理！\")\r\n        response.end()\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}